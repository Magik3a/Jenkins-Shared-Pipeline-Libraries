// @Library(['github.com/Magik3a/Jenkinsfile_Gitflow_Versioning@master']) _
pipeline {
    agent any
    libraries {
      lib('github.com/Magik3a/Jenkinsfile_Gitflow_Versioning@' + BRANCH_NAME)
    }
    environment {
        PROJECT_VERSION = '3.22.21.0'

    }
    stages {
        stage('Test Versions') {            
            parallel {

 // Template for testing
 // - Master Branch  - 1.19.12.BUILD_NUMBER = 1.19.12.0
 // - Hotfix Branch  - *.**.+1.BUILD_NUMBER = 1.19.13.1
 // - Release Branch - *.+1.+1.BUILD_NUMBER = 1.20.13.1
 // - Develop Branch - *.+1.+1.BUILD_NUMBER = 1.20.13.1
 // - Feature Branch -+1.+1.+1.BUILD_NUMBER = 2.20.13.1

                stage('Test master branch') {
                    steps {                        
                        script{		
                            if(get_version('master') != "1.19.12.${BUILD_NUMBER}"){
                                error 'Not Correct Version for master branch!!'
                            }
                            if(get_version('master', PROJECT_VERSION) != "3.22.21.${BUILD_NUMBER}"){
                                error 'Not Correct Version for master branch!!'
                            }
                        }                  
                    }
                }
                stage('Test hotfix branch') {
                    steps {                        
                        script{		
                            if(get_version('hotfix/lv-666') != "1.19.12.${BUILD_NUMBER}"){
                                error 'Not Correct Version for hotfix branch!'
                            }
                            if(get_version('hotfix/lv-666', PROJECT_VERSION) != "3.22.21.${BUILD_NUMBER}"){
                                error 'Not Correct Version for hotfix branch!'
                            }
                        }                  
                    }
                }
                stage('Test release branch') {
                    steps {                        
                        script{		
                            if(get_version('release/1.19.13') != "1.19.13.${BUILD_NUMBER}"){
                                error 'Not Correct Version for release branch!'
                            }
                            if(get_version('release/3.22.22', PROJECT_VERSION) != "3.22.22.${BUILD_NUMBER}"){
                                error 'Not Correct Version for release branch!'
                            }
                        }                  
                    }
                }
                stage('Test develop branch') {
                    steps {                        
                        script{		
                            if(get_version('develop') != "1.20.13.${BUILD_NUMBER}"){
                                error 'Not Correct Version for develop branch!'
                            }
                            if(get_version('develop', PROJECT_VERSION) != "3.23.22.${BUILD_NUMBER}"){
                                error 'Not Correct Version for develop branch!'
                            }
                        }                  
                    }
                }
                stage('Test feature branch') {
                    steps {                        
                        script{		
                            if(get_version('feature/lv-333') != "2.20.13.${BUILD_NUMBER}"){
                                error 'Not Correct Version for feature branch!'
                            }
                            if(get_version('feature/lv-333', PROJECT_VERSION) != "4.23.22.${BUILD_NUMBER}"){
                                error 'Not Correct Version for feature branch!'
                            }
                        }                  
                    }
                }
            }
        }
    }
}